From 42d040a8e9335367f82f84c943d93b36ab6848df Mon Sep 17 00:00:00 2001
From: Peter Jung <admin@ptr1337.dev>
Date: Mon, 18 Jul 2022 01:41:58 +0200
Subject: [PATCH 07/14] revert drivers/scsi/sd.c

Signed-off-by: Peter Jung <admin@ptr1337.dev>
---
 drivers/scsi/sd.c | 72 -----------------------------------------------
 1 file changed, 72 deletions(-)

diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
index 65f8eab1e9ae..a1a2ac09066f 100644
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@ -3138,52 +3138,6 @@ static bool sd_validate_min_xfer_size(struct scsi_disk *sdkp)
 	return true;
 }
 
-static bool sd_validate_min_xfer_size(struct scsi_disk *sdkp)
-{
-	struct scsi_device *sdp = sdkp->device;
-	unsigned int min_xfer_bytes =
-		logical_to_bytes(sdp, sdkp->min_xfer_blocks);
-
-	if (sdkp->min_xfer_blocks == 0)
-		return false;
-
-	if (min_xfer_bytes & (sdkp->physical_block_size - 1)) {
-		sd_first_printk(KERN_WARNING, sdkp,
-				"Preferred minimum I/O size %u bytes not a " \
-				"multiple of physical block size (%u bytes)\n",
-				min_xfer_bytes, sdkp->physical_block_size);
-		sdkp->min_xfer_blocks = 0;
-		return false;
-	}
-
-	sd_first_printk(KERN_INFO, sdkp, "Preferred minimum I/O size %u bytes\n",
-			min_xfer_bytes);
-	return true;
-}
-
-static bool sd_validate_min_xfer_size(struct scsi_disk *sdkp)
-{
-	struct scsi_device *sdp = sdkp->device;
-	unsigned int min_xfer_bytes =
-		logical_to_bytes(sdp, sdkp->min_xfer_blocks);
-
-	if (sdkp->min_xfer_blocks == 0)
-		return false;
-
-	if (min_xfer_bytes & (sdkp->physical_block_size - 1)) {
-		sd_first_printk(KERN_WARNING, sdkp,
-				"Preferred minimum I/O size %u bytes not a " \
-				"multiple of physical block size (%u bytes)\n",
-				min_xfer_bytes, sdkp->physical_block_size);
-		sdkp->min_xfer_blocks = 0;
-		return false;
-	}
-
-	sd_first_printk(KERN_INFO, sdkp, "Preferred minimum I/O size %u bytes\n",
-			min_xfer_bytes);
-	return true;
-}
-
 /*
  * Determine the device's preferred I/O size for reads and writes
  * unless the reported value is unreasonably small, large, not a
@@ -3242,24 +3196,6 @@ static bool sd_validate_opt_xfer_size(struct scsi_disk *sdkp,
 		return false;
 	}
 
-	if (min_xfer_bytes && opt_xfer_bytes & (min_xfer_bytes - 1)) {
-		sd_first_printk(KERN_WARNING, sdkp,
-				"Optimal transfer size %u bytes not a " \
-				"multiple of preferred minimum block " \
-				"size (%u bytes)\n",
-				opt_xfer_bytes, min_xfer_bytes);
-		return false;
-	}
-
-	if (min_xfer_bytes && opt_xfer_bytes & (min_xfer_bytes - 1)) {
-		sd_first_printk(KERN_WARNING, sdkp,
-				"Optimal transfer size %u bytes not a " \
-				"multiple of preferred minimum block " \
-				"size (%u bytes)\n",
-				opt_xfer_bytes, min_xfer_bytes);
-		return false;
-	}
-
 	sd_first_printk(KERN_INFO, sdkp, "Optimal transfer size %u bytes\n",
 			opt_xfer_bytes);
 	return true;
@@ -3351,14 +3287,6 @@ static int sd_revalidate_disk(struct gendisk *disk)
 	else
 		blk_queue_io_min(sdkp->disk->queue, 0);
 
-	if (sd_validate_min_xfer_size(sdkp))
-		blk_queue_io_min(sdkp->disk->queue,
-				 logical_to_bytes(sdp, sdkp->min_xfer_blocks));
-
-	if (sd_validate_min_xfer_size(sdkp))
-		blk_queue_io_min(sdkp->disk->queue,
-				 logical_to_bytes(sdp, sdkp->min_xfer_blocks));
-
 	if (sd_validate_opt_xfer_size(sdkp, dev_max)) {
 		q->limits.io_opt = logical_to_bytes(sdp, sdkp->opt_xfer_blocks);
 		rw_max = logical_to_sectors(sdp, sdkp->opt_xfer_blocks);
-- 
2.37.1

